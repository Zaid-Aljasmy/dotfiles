# Default config for sway
#
# Copy this to ~/.config/sway/config and edit it to your liking.
#
# Read `man 5 sway` for a complete reference.

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
font pango:JetBrainsMono Nerd Font 11.8

### Variables
#
# Logo key. Use Mod1 for Alt.
set $mod Mod4
# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l

# Your preferred web browser
set $browser firefox
# Your preferred terminal emulator
set $term foot

# Your preferred application launcher
set $menu wmenu-run \
    -p "Run:" \
    -f "JetBrainsMono Nerd Font 13.5" \
    -l 4 \
    -N 1a1b26 \
    -n a9b1d6 \
    -M 55759c \
    -m 1a1b26 \
    -S 55759c \
    -s 1a1b26

# Power menu
set $powermenu ~/.config/sway/scripts/powermenu

# include /etc/sway/config-vars.d/*
# include /etc/sway/config.d/*

### Output configuration
#
# Default wallpaper (more resolutions are available in /usr/share/backgrounds/sway/)
# This is commented in Debian, because the Sway wallpaper files are in a separate
# package `sway-backgrounds`. Installing this package drops a config file to
# /etc/sway/config.d/
# output * bg /usr/share/backgrounds/sway/Sway_Wallpaper_Blue_1920x1080.png fill
#
# Example configuration:
#
#   output HDMI-A-1 resolution 1920x1080 position 1920,0
#
# You can get the names of your outputs by running: swaymsg -t get_outputs

### Idle configuration
#
# Example configuration:
#
 exec swayidle -w \
          timeout 300 'swaylock -f -c 000000' \
          timeout 600 'swaymsg "output * power off"' resume 'swaymsg "output * power on"' \
          
# for sleep you can use > before-sleep 'swaylock -f -c 000000'
# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.

### Input configuration
#
# Example configuration:
#
#   input "2:14:SynPS/2_Synaptics_TouchPad" {
#       dwt enabled
#       tap enabled
#       natural_scroll enabled
#       middle_emulation enabled
#   }
#
# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.

### Key bindings
#
# Basics:
#
    # Start a browser
    bindsym $mod+alt+b exec $browser

    # Start a terminal
    bindsym $mod+Return exec $term

    # Kill focused window
    bindsym $mod+Shift+q kill

    # Start your launcher
    bindsym $mod+p exec $menu
    bindsym $mod+shift+e exec $powermenu

    # Switch to another language
input "type:keyboard" {
    xkb_layout "us,ara"
    xkb_options "grp:alt_space_toggle,bell:none"
    repeat_delay 200
    repeat_rate 40
}

# screenshot 
bindsym $mod+Shift+p exec grim - | tee ~/Pictures/Screenshots/screenshot_$(date +%Y-%m-%d-%H%M%S).png | wl-copy && notify-send -t 3000 "Screenshot saved and copied to clipboard"
# screenshot with selection
bindsym $mod+Shift+g exec grim -g "$(slurp)" - | tee ~/Pictures/Screenshots/screenshot_$(date +%Y-%m-%d-%H%M%S).png | wl-copy && notify-send -t 3000 "Screenshot saved and copied to clipboard"

# lock
bindsym $mod+d exec swaylock -C ~/.config/swaylock/config

# copy color
bindsym $mod+c exec grim -g "$(slurp -p)" -t ppm - | magick - -format "#%[hex:p{0,0}]" info:- | wl-copy

    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod normal

    # Reload the configuration file
    bindsym $mod+Shift+c reload

    # Exit sway (logs you out of your Wayland session)
    # bindsym $mod+Shift+e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -B 'Yes, exit sway' 'swaymsg exit'
#
# Moving around:
#
    # Move your focus around
    bindsym $mod+$left focus left
    bindsym $mod+$down focus down
    bindsym $mod+$up focus up
    bindsym $mod+$right focus right
    # Or use $mod+[up|down|left|right]
    bindsym $mod+Left focus left
    bindsym $mod+Down focus down
    bindsym $mod+Up focus up
    bindsym $mod+Right focus right

    # Move the focused window with the same, but add Shift
    bindsym $mod+Shift+$left move left
    bindsym $mod+Shift+$down move down
    bindsym $mod+Shift+$up move up
    bindsym $mod+Shift+$right move right
    # Ditto, with arrow keys
    bindsym $mod+Shift+Left move left
    bindsym $mod+Shift+Down move down
    bindsym $mod+Shift+Up move up
    bindsym $mod+Shift+Right move right
#
# Workspaces:
#
    # Switch to workspace
    bindsym $mod+1 workspace number 1
    bindsym $mod+2 workspace number 2
    bindsym $mod+3 workspace number 3
    bindsym $mod+4 workspace number 4
    bindsym $mod+5 workspace number 5
    bindsym $mod+6 workspace number 6
    bindsym $mod+7 workspace number 7
    bindsym $mod+8 workspace number 8
    bindsym $mod+9 workspace number 9
    bindsym $mod+0 workspace number 10

    # Switch to previous/next workspace using $mod + Alt + Arrow keys
    bindsym $mod+Mod1+Left  workspace prev
    bindsym $mod+Mod1+Right workspace next


    # Move focused container to workspace
    bindsym $mod+Shift+1 move container to workspace number 1
    bindsym $mod+Shift+2 move container to workspace number 2
    bindsym $mod+Shift+3 move container to workspace number 3
    bindsym $mod+Shift+4 move container to workspace number 4
    bindsym $mod+Shift+5 move container to workspace number 5
    bindsym $mod+Shift+6 move container to workspace number 6
    bindsym $mod+Shift+7 move container to workspace number 7
    bindsym $mod+Shift+8 move container to workspace number 8
    bindsym $mod+Shift+9 move container to workspace number 9
    bindsym $mod+Shift+0 move container to workspace number 10
    # Note: workspaces can have any name you want, not just numbers.
    # We just use 1-10 as the default.
#
# Layout stuff:
#
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    bindsym $mod+b splith
    bindsym $mod+v splitv

    # Switch the current container between different layout styles
    bindsym $mod+s layout stacking
    bindsym $mod+w layout tabbed
    bindsym $mod+e layout toggle split

    # Make the current focus fullscreen
    bindsym $mod+f fullscreen

    # Toggle the current focus between tiling and floating mode
    bindsym $mod+Shift+space floating toggle

    # Swap focus between the tiling area and the floating area
    bindsym $mod+space focus mode_toggle

    # Move focus to the parent container
    bindsym $mod+a focus parent
#
# Scratchpad:
#
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    # bindsym $mod+Shift+minus move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    # bindsym $mod+minus scratchpad show
#
# Resizing containers:
#
mode "Resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym $left resize shrink width 15px
    bindsym $down resize grow height 15px
    bindsym $up resize shrink height 15px
    bindsym $right resize grow width 15px

    # Ditto, with arrow keys
    bindsym Left resize shrink width 15px
    bindsym Down resize grow height 15px
    bindsym Up resize shrink height 15px
    bindsym Right resize grow width 15px

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+r mode "Resize"

# Resize with Alt + Shift + Arrow keys
bindsym Mod1+Shift+Left  resize shrink width 70px
bindsym Mod1+Shift+Down  resize grow height 70px
bindsym Mod1+Shift+Up    resize shrink height 70px
bindsym Mod1+Shift+Right resize grow width 70px

#
# Utilities:
#
    # Special keys to adjust volume via PulseAudio
    bindsym --locked XF86AudioMute exec pactl set-sink-mute \@DEFAULT_SINK@ toggle
    bindsym --locked XF86AudioLowerVolume exec pactl set-sink-volume \@DEFAULT_SINK@ -5%
    bindsym --locked XF86AudioRaiseVolume exec pactl set-sink-volume \@DEFAULT_SINK@ +5%
    bindsym --locked XF86AudioMicMute exec pactl set-source-mute \@DEFAULT_SOURCE@ toggle
    # Special keys to adjust brightness via brightnessctl
    bindsym --locked XF86MonBrightnessDown exec brightnessctl set 5%-
    bindsym --locked XF86MonBrightnessUp exec brightnessctl set 5%+
    # Special key to take a screenshot with grim
    bindsym Print exec grim

#
# Status Bar:
#
# Read `man 5 sway-bar` for more information about this section.

# set primary tokyonight colorscheme colors
set $bg #1a1b26
set $fg #a9b1d6
set $red #f7768e
set $green #9ece6a
set $yellow #e0af68
set $blue #55759c
set $purple #ad8ee6
set $cyan #449dab
set $white #a9b1d6

bar {
    position top
    # swaybar_command waybar

    # When the status_command prints a new line to stdout, swaybar updates.
    # The default just shows the current date and time.
    # status_command while date +'%Y-%m-%d %X'; do sleep 1; done
    status_command while ~/.config/sway/status/status_bar 2>/dev/null; do sleep 1; done

   colors {
        # bar background color
        background $bg
        # text color used for blocks that do not have a color specified.
        statusline $fg
        # workspaces section            
        #                    border  backgr. text
        focused_workspace    $blue $blue $bg
        inactive_workspace   $bg $bg $fg
        active_workspace     $bg $bg $fg
        urgent_workspace     $red $red $bg
    }

}

# class                 border|backgr|text|indicator|child_border
client.focused          $blue $blue $bg $blue $blue
client.focused_inactive $bg $bg $fg $bg $bg
client.unfocused        $bg $bg $fg $bg $bg
client.urgent           $red $red $bg $red $red


# default_border  type none if you want no border or replace the none and type pixel 4 if you want a border (choose your favorite number)
default_border none
for_window [floating] border none
for_window [floating] move position center
smart_borders on

set $mode_borders Borders: (d) disable, (p) pixel, (n) normal
bindsym $mod+shift+b mode "$mode_borders"

mode "$mode_borders" {
    bindsym d border none
    bindsym p border pixel 4
    bindsym n border normal
    bindsym Return mode "default"
    bindsym Escape mode "default"
}


# gaps
gaps inner 7
gaps outer 1
# smart_gaps on

# Press $mod+Shift+g to enter the gap mode. 
# Choose o or i for modifying outer/inner gaps.
# Press one of + / - (in-/decrement for current workspace) 
# or 0 (remove gaps for current workspace). If you also press Shift 
# with these keys, the change will be global for all workspaces.
set $mode_gaps Gaps: (o) outer, (i) inner, (d) disable, (e) enable 
set $mode_gaps_outer Gaps Outer: [+] [-]  (local) | Shift [+] [-]  (global)
set $mode_gaps_inner Gaps Inner: [+] [-]  (local) | Shift [+] [-]  (global)
bindsym $mod+g mode "$mode_gaps"

mode "$mode_gaps" {
        bindsym o      mode "$mode_gaps_outer"
        bindsym i      mode "$mode_gaps_inner"
        bindsym d      gaps inner all set 0; gaps outer all set 0
        bindsym e      gaps inner all set 20; gaps outer all set 7

        bindsym Return mode "default"
        bindsym Escape mode "default"
}
mode "$mode_gaps_inner" {
        bindsym plus  gaps inner current plus 5
        bindsym minus gaps inner current minus 5
        bindsym Shift+plus  gaps inner all plus 5
        bindsym Shift+minus gaps inner all minus 5

        bindsym Return mode "default"
        bindsym Escape mode "default"
}
mode "$mode_gaps_outer" {
        bindsym plus  gaps outer current plus 5
        bindsym minus gaps outer current minus 5
        bindsym Shift+plus  gaps outer all plus 5
        bindsym Shift+minus gaps outer all minus 5

        bindsym Return mode "default"
        bindsym Escape mode "default"
}

# Power Profiles
set $mode_power Power Mods: (p) Performance, (b) Balanced, (s) Saver

bindsym $mod+alt+p mode "$mode_power"

mode "$mode_power" {
    bindsym b exec powerprofilesctl set balanced; mode "default"
    bindsym p exec powerprofilesctl set performance; mode "default"
    bindsym s exec powerprofilesctl set power-saver; mode "default"

    bindsym Return mode "default"
    bindsym Escape mode "default"
}


# autostart

# mouse speed
input "INSTANT USB GAMING MOUSE" {
    left_handed enabled
    tap enabled
    natural_scroll disabled
    dwt enabled
    accel_profile "flat" 
    pointer_accel 0.1    
}

# background
exec_always swaybg -i ~/Pictures/Backgrounds/jdm2.jpg -m fill

# notifications
exec_always --no-startup-id mako -c ~/.config/mako/config

# brightness
exec_always --no-startup-id brightnessctl set 25%

# dbus 
exec dbus-update-activation-environment --systemd WAYLAND_DISPLAY XDG_CURRENT_DESKTOP=sway
# power profiles
exec --no-startup-id powerprofilesctl set balanced

